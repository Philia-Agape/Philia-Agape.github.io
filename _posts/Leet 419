class Solution {
public:
    int countBattleships(vector<vector<char>>& board) {
        int ans = 0;
        const int row = board.size(), column = board[0].size();
        vector<vector<int>> flag(row, vector<int>(column,0));
        
        for(int i=0; i<row; ++i){
           for(int j=0; j<column; ++j){
              if(board[i][j] == 'X' && flag[i][j] == 0){
                 bfs(board, flag, i, j);
                 ++ans;
              }    
           }    
        }
        return ans;
    }
    
    void bfs(const vector<vector<char>> board, vector<vector<int>>& flag, int x, int y){
        const int row = board.size(), column = board[0].size();
        for(int i=x; i<row; ++i){
            if(board[i][y] == 'X') flag[i][y] = 1;
            else break;
        }
        for(int j=y; j<column; ++j){
            if(board[x][j] == 'X') flag[x][j] = 1;
            else break;
        }
        return;
    }
};
